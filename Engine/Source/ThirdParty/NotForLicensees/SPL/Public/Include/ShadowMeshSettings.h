//------------------------------------------------------
// File generated by SimplyCode
//------------------------------------------------------

#include <string>

#include "Enums.h"
#include "BaseSettings.h"

using namespace std;

namespace Simplygon { namespace SPL { namespace v80 {

    class  ShadowMeshSettings : public BaseSettings
    {
	public:
        double LightDirectionX;
        double LightDirectionY;
        double LightDirectionZ;
        int OnScreenErrorTolerance;
        int OnScreenSize ;
        bool UseDirectionalMode ;
		
		ShadowMeshSettings() : BaseSettings()
        {
		
			LightDirectionX = 0;
			LightDirectionY = 0;
			LightDirectionZ = 0;
			OnScreenErrorTolerance = 4;
			OnScreenSize  = 100;
			UseDirectionalMode  = true;
        }

		
        ShadowMeshSettings(const Json::Value& jsonNode) : BaseSettings(jsonNode)
        {
			if (!jsonNode["LightDirectionX"].isNull()) { LightDirectionX = (jsonNode["LightDirectionX"].asDouble());	} else { LightDirectionX = 0; }
			if (!jsonNode["LightDirectionY"].isNull()) { LightDirectionY = (jsonNode["LightDirectionY"].asDouble());	} else { LightDirectionY = 0; }
			if (!jsonNode["LightDirectionZ"].isNull()) { LightDirectionZ = (jsonNode["LightDirectionZ"].asDouble());	} else { LightDirectionZ = 0; }
			if (!jsonNode["OnScreenErrorTolerance"].isNull()) { OnScreenErrorTolerance = (jsonNode["OnScreenErrorTolerance"].asInt());	} else { OnScreenErrorTolerance = 4; }
			if (!jsonNode["OnScreenSize "].isNull()) { OnScreenSize  = (jsonNode["OnScreenSize "].asInt());	} else { OnScreenSize  = 100; }
			if (!jsonNode["UseDirectionalMode "].isNull()) { UseDirectionalMode  = (jsonNode["UseDirectionalMode "].asBool());	} else { UseDirectionalMode  = true; }
        }


        virtual void ToJson(Json::Value& jsonNode)
        {
			BaseSettings::ToJson(jsonNode);

			jsonNode["LightDirectionX"] = (LightDirectionX);
			jsonNode["LightDirectionY"] = (LightDirectionY);
			jsonNode["LightDirectionZ"] = (LightDirectionZ);
			jsonNode["OnScreenErrorTolerance"] = (OnScreenErrorTolerance);
			jsonNode["OnScreenSize "] = (OnScreenSize );
			jsonNode["UseDirectionalMode "] = (UseDirectionalMode );
        }

	};
} } } 
